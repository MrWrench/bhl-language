{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "BHL",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#func"
		},
		{
			"include": "#built-in types"
		},
		{
			"include": "#field enum"
		},
		{
			"include": "#field like:this"
		},
		{
			"include": "#slash comment"
		},
		{
			"include": "#hash comment"
		},
		{
			"include": "#function call"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#booleans"
		},
		{
			"include": "#multiline comment"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.bhl",
				"match": "\\b(import|if|else|while|forever|paral|not|eval|while|prio|until_failure|until_success|seq|func|defer|paral_all)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.bhl",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.bhl",
					"match": "\\\\."
				}
			]
		},
		"func": {
			"patterns": [
				{
					"match": "\\b(func)\\b \\w+( +)?(.*)( +)?\\{",
					"captures": {
						"0": {"name": "keyword.control.bhl"},
						"1": {"name": "entity.name.class.bhl"}
					}
				}
			]
		},
		"built-in types": {
			"patterns": [{
				"match": "\\b(float|uint|int|string|double|bool|Vec2|Vec3|class)\\b",
				"captures": {
					"0": {"name": "variable.language"}
				}
			}]
		},
		"field enum":{
			"patterns": [
			{
				"match": "\\b(\\w+\\:\\:\\w+)\\b",
				"captures": {
					"0": {"name": "variable.language"}
				}
			}]
		},
		"field like:this":{
			"patterns": [
				{
					"match": "\\s*(\\w+)\\s*:\\s*",
					"captures": {
						"0": {"name": "variable.language"}
					}
				}]
		},
		"slash comment":{
			"patterns": [
				{
					"name": "comment.line",
					"match": "//.*"
				}]
		},
		"hash comment":{
			"patterns": [
				{
					"name": "comment.line",
					"match": "#.*"
				}]
		},
		"function call":{
			"patterns": [
				{
					"match": "\\b([\\w\\^]+)\\s*\\(",
					"captures": {
						"1": {"name": "variable.function.bhl"}
					}
				}]
		},
		"numbers":{
			"patterns": [
				{
					"name": "constant.numeric.bhl",
					"match": "\\b(-)?[0-9.]+\\b"
			}]
		},
		"booleans":{
			"patterns": [
				{
					"name": "keyword.other",
					"match": "\\b(true|false)\\b"
			}]
		},
		"multiline comment":{
			"name": "comment.block.bhl",
			"begin": "/\\*",
			"end": "\\*/",
			"patterns": [
				{
					"name": "comment.line.bhl",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.bhl"
}